---
- name: Generate new UEFI keys
  command: >
    openssl req -new -x509 -newkey rsa:2048 -keyout /root/uefi_key.key -out /root/uefi_key.crt -days 3650 -nodes -subj "/CN=UEFI Key"
  args:
    creates: /root/uefi_key.crt

- name: Convert PEM certificate to DER format
  command: >
    openssl x509 -outform der -in /root/uefi_key.crt -out /root/uefi_key.der.crt
  args:
    creates: /root/uefi_key.der.crt



- name: Notify user to reboot system for key enrollment
  debug:
    msg: "Please reboot the system to enroll the new keys."

- name: Sign bootloader with new keys
  command: >
    sbsign --key /root/uefi_key.key --cert /root/uefi_key.crt /boot/efi/EFI/almalinux/grubx64.efi
  register: sign_bootloader
  ignore_errors: yes

- name: Sign kernel with new keys
  command: >
    sbsign --key /root/uefi_key.key --cert /root/uefi_key.crt /boot/vmlinuz-{{ ansible_kernel }}
  register: sign_kernel
  ignore_errors: yes

- name: Verify the UEFI keys
  command: mokutil --list-enrolled
  register: mokutil_list
  ignore_errors: yes

- name: Show debug information
  debug:
    msg: |
      MOK import command output: "{{ mokutil_import.stdout | default('No output') }}"
      Signed bootloader command output: "{{ sign_bootloader.stdout | default('No output') }}"
      Signed kernel command output: "{{ sign_kernel.stdout | default('No output') }}"
      Enrolled MOKs: "{{ mokutil_list.stdout | default('No output') }}"
